name: NVIDIA GPU passthrough

on:
  pull_request:
    paths:
      - '.github/workflows/nvidia-test.yml'
      - '.github/workflows/testflinger/**'
  schedule:
    - cron: '38 6 */5 * *'
  workflow_dispatch:
    inputs:
      snap-tracks:
        description: List of snap tracks to run the tests. In JSON format, i.e. '["latest/stable", "5.0/candidate"]'.
        type: string
        default: '["latest/edge"]'

jobs:
  uc-cdi-test:
    runs-on: [self-hosted, self-hosted-linux-amd64-jammy-private-endpoint-medium]
    strategy:
      matrix:
        track: ${{ fromJSON(inputs.snap-tracks || '["latest/edge"]') }}
        distro:
          - core24-latest
    env:
      TESTFLINGER_DIR: .github/workflows/testflinger
      SNAP_CHANNEL: ${{ matrix.track }}
    steps:
      - name: Event data
        run: "echo ::notice::Snap channel: $SNAP_CHANNEL"

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Create Testflinger job
        env:
          JOB_QUEUE: lxd-nvidia
          DISTRO: ${{ matrix.distro }}
        run: |
          # Prepare job
          envsubst '$JOB_QUEUE $DISTRO $SNAP_CHANNEL' \
            < $TESTFLINGER_DIR/uc-nvidia-cdi-job.yml \
            > $TESTFLINGER_DIR/uc-nvidia-cdi-job.temp
          mv $TESTFLINGER_DIR/uc-nvidia-cdi-job.temp $TESTFLINGER_DIR/uc-nvidia-cdi-job.yml

      - name: Run tests
        uses: canonical/testflinger/.github/actions/submit@main
        with:
          poll: true
          job-path: ${{ env.TESTFLINGER_DIR }}/uc-nvidia-cdi-job.yml

  cdi-test:
    runs-on: [self-hosted, self-hosted-linux-amd64-jammy-private-endpoint-medium]
    strategy:
      matrix:
        track: ${{ fromJSON(inputs.snap-tracks || '["latest/edge"]') }}
        distro:
          - noble
    env:
      TESTFLINGER_DIR: .github/workflows/testflinger
      SNAP_CHANNEL: ${{ matrix.track }}
    steps:
      - name: Event data
        run: "echo ::notice::Snap channel: $SNAP_CHANNEL"

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Create Testflinger job
        env:
          JOB_QUEUE: lxd-nvidia
          DISTRO: ${{ matrix.distro }}
        run: |
          # Prepare job
          envsubst '$JOB_QUEUE $DISTRO $SNAP_CHANNEL' \
            < $TESTFLINGER_DIR/nvidia-cdi-job.yml \
            > $TESTFLINGER_DIR/nvidia-cdi-job.temp
          mv $TESTFLINGER_DIR/nvidia-cdi-job.temp $TESTFLINGER_DIR/nvidia-cdi-job.yml

      - name: Run tests
        uses: canonical/testflinger/.github/actions/submit@main
        with:
          poll: true
          job-path: ${{ env.TESTFLINGER_DIR }}/nvidia-cdi-job.yml

  nvidia-runtime-test:
    runs-on: [self-hosted, self-hosted-linux-amd64-jammy-private-endpoint-medium]
    strategy:
      matrix:
        track: ${{ fromJSON(inputs.snap-tracks || '["latest/edge"]') }}
        distro:
          - noble
    env:
      TESTFLINGER_DIR: .github/workflows/testflinger
      SNAP_CHANNEL: ${{ matrix.track }}
    steps:
      - name: Event data
        run: "echo ::notice::Snap channel: $SNAP_CHANNEL"

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Create Testflinger job
        env:
          JOB_QUEUE: lxd-nvidia
          DISTRO: ${{ matrix.distro }}
        run: |
          # Prepare job
          envsubst '$JOB_QUEUE $DISTRO $SNAP_CHANNEL' \
            < $TESTFLINGER_DIR/nvidia-legacy-runtime-job.yml \
            > $TESTFLINGER_DIR/nvidia-legacy-runtime-job.temp
          mv $TESTFLINGER_DIR/nvidia-legacy-runtime-job.temp $TESTFLINGER_DIR/nvidia-legacy-runtime-job.yml

      - name: Run tests
        uses: canonical/testflinger/.github/actions/submit@main
        with:
          poll: true
          job-path: ${{ env.TESTFLINGER_DIR }}/nvidia-legacy-runtime-job.yml
