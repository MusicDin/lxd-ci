name: Upload Image
description: Composite action for uploading built images

inputs:
  target:
    description: Directory where built image is located
    required: true
  image_dir:
    description: Image directory in format <distro>/<release>/<arch>/<variant>
    required: true
  ssh_ip:
    description: SSH IP of the image server
    required: true
  ssh_port:
    description: SSH port of the image server
    required: true
  ssh_user:
    description: SSH user of the image server
    required: true
  ssh_private_key:
    description: SSH private key for the image server
    required: true

runs:
  using: composite
  steps:
    - name: Print artifacts
      shell: bash
      run: ls -lah "${{ inputs.target }}"

    - name: Configure private key and known host
      shell: bash
      env:
        SSH_IP: ${{ inputs.ssh_ip }}
        SSH_PORT: ${{ inputs.ssh_port }}
      run : |
        # Store image server private key.
        mkdir -p -m 0700 ~/.ssh
        touch ~/.ssh/id_ed25519
        chmod 0600 ~/.ssh/id_ed25519
        echo "${{ inputs.ssh_private_key }}" > ~/.ssh/id_ed25519

        # Configure known host.
        ssh-keyscan -H -p ${SSH_PORT} ${SSH_IP} >> ~/.ssh/known_hosts

    - name: Rsync artifacts to the image server
      shell: bash
      env:
        SSH_HOST: ${{ inputs.ssh_ip }}
        SSH_USER: ${{ inputs.ssh_user }}
        SSH_PORT: ${{ inputs.ssh_port }}
      run: |
        # Ensure path of the source directory is expanded.
        SRC_DIR=$(echo ${{ inputs.target }})
        IMG_DIR=${{ inputs.image_dir }}
        VERSION=$(cat "${SRC_DIR}/serial")

        # Create directory structure that will be mirrored on the target server.
        PRODUCT_PATH="${SRC_DIR}-upload/${IMG_DIR}"
        mkdir -p "${PRODUCT_PATH}/${VERSION}"

        # Move config.yml file if exists.
        if [ -f "${SRC_DIR}/config.yaml" ]; then
            mv "${SRC_DIR}/config.yaml" "${PRODUCT_PATH}"
        fi

        # Move image content.
        mv ${SRC_DIR}/* "${PRODUCT_PATH}/${VERSION}"

        # s -> Uses SFTP protocol
        # r -> Copies files recursively
        # p -> Preserves modification and access times
        # C -> Enables compression
        #
        # scp -srpC -v -P ${SSH_PORT} -i ~/.ssh/imageserver_id_rsa \
        #   ${SRC_DIR}-upload/* \
        #   "${SSH_USER}@${SSH_HOST}:"

        # Use SFTP to upload images to the server.
        sftp -P ${SSH_PORT} "${SSH_USER}@${SSH_HOST}" <<EOF
            put -r ${SRC_DIR}-upload/*
            bye
        EOF
