#!/bin/sh
set -eux

# Install LXD
install_lxd

if ! hasNeededAPIExtension storage_buckets; then
  echo "Skipping test as not supported"
  # shellcheck disable=SC2034
  FAIL=0
  exit 0
fi


# Grab the architecture so we can install the correct pre-built minio.
arch="$(uname -m)"
if [ "${arch}" = "aarch64" ]; then
  arch="arm64"
elif [ "${arch}" = "ppc64el" ]; then
  arch="ppc64le"
elif [ "${arch}" = "armhf" ]; then
  arch="arm"
elif [ "${arch}" = "riscv64" ] ; then
  echo "Skipping test as not supported by architecture $(arch)"
  FAIL=0
  exit 0
fi

poolDriverList="${1:-dir btrfs lvm lvm-thin zfs ceph}"

if echo "${poolDriverList}" | grep -qwF "ceph"; then
  snap set lxd ceph.external=true
  lxd waitready --timeout=300

  # Install dependencies
  apt-get update
  apt-get install --no-install-recommends --yes ceph-common
fi

# Clean up the build dir in case it hung around from a failed test.
rm -rf /opt/minio
mkdir -p /opt/minio

# Download the minio server.
curl -sSfL "https://dl.min.io/server/minio/release/linux-${arch}/minio" --output "/opt/minio/minio"
chmod +x "opt/minio/minio"

# Also grab the latest minio client to maintain compatibility with the server.
curl -sSfL "https://dl.min.io/client/mc/release/linux-${arch}/mc" --output "/opt/minio/mc"
chmod +x "opt/minio/mc"

# Set the snap config key for minio and reload LXD to have it take effect.
snap set lxd minio.path=/opt/minio
systemctl reload snap.lxd.daemon
lxd waitready --timeout=300

# Configure LXD
lxc project switch default
lxc project create test -c features.images=false
lxc project switch test

poolName="bucketpool$$"

for poolDriver in $poolDriverList
do
  echo "==> Create storage pool using driver ${poolDriver}"
  if [ "${poolDriver}" = "dir" ]; then
    lxc storage create "${poolName}" "${poolDriver}" volume.size=5GB
  elif [ "${poolDriver}" = "ceph" ]; then
    lxc storage create "${poolName}" cephobject cephobject.radosgw.endpoint="${LXD_CEPH_CEPHOBJECT_RADOSGW}"
  elif [ "${poolDriver}" = "lvm" ]; then
    lxc storage create "${poolName}" "${poolDriver}" size=40GiB lvm.use_thinpool=false volume.size=5GB
  elif [ "${poolDriver}" = "lvm-thin" ]; then
    lxc storage create "${poolName}" lvm size=20GiB volume.size=5GB
  else
    lxc storage create "${poolName}" "${poolDriver}" size=20GB volume.size=5GB
  fi

  if [ "${poolDriver}" != "ceph" ]; then
    lxc config set core.storage_buckets_address "127.0.0.1:9000"
  fi

  lxc storage show "${poolName}"

  echo "==> Creating buckets"
  lxc storage bucket create "${poolName}" bucket1

  echo "==> Deleting buckets and storage pool"
  lxc storage bucket delete "${poolName}" bucket1
  lxc storage rm "${poolName}"
done

lxc project switch default
lxc project delete test

# Remove MinIO now that the test is over.
rm -rf /opt/minio

# shellcheck disable=SC2034
FAIL=0
