#!/bin/bash
set -eu

# Default to loop storage pool if /dev/nvme0n1p3 doesn't exist.
storageDevice=""
if [ -f "/dev/nvme0n1p3" ]; then
  storageDevice="/dev/nvme0n1p3"
fi

waitSnapdSeed() (
  set +x
  for i in $(seq 60); do # Wait up to 60s.
    if systemctl show snapd.seeded.service --value --property SubState | grep -qx exited; then
      return 0 # Success.
    fi

    sleep 1
  done

  echo "snapd not seeded after ${i}s"
  return 1 # Failed.
)

cleanup() {
    echo ""
    if [ "${FAIL}" = "1" ]; then
        echo "Test failed"
        exit 1
    fi

    echo "Test passed"
    exit 0
}

FAIL=1
trap cleanup EXIT HUP INT TERM

# Wait for snapd seeding
waitSnapdSeed

# Configure to use the proxy
curl -s http://canonical-lxd.stgraber.org/config/snapd.sh | sh

# Install LXD
while [ -e /usr/bin/lxd ]; do
    apt-get remove --purge --yes lxd lxd-client lxcfs liblxc1
done
apt-get remove --purge cloud-init --yes
snap remove lxd || true
snap install lxd --channel=latest/edge
lxd waitready --timeout=300

# Configure LXD
lxc storage create default zfs source="${storageDevice}"
lxc profile device add default root disk path=/ pool=default
lxc network create lxdbr0
lxc profile device add default eth0 nic network=lxdbr0 name=eth0

# Launch a test container
echo "==> Launching a test container"
lxc launch images:ubuntu/20.04/cloud c1
sleep 10

echo "==> Installing yubikey tools"
lxc exec c1 -- apt-get install --no-install-recommends --yes yubikey-manager

echo "==> Validating as non-working"
! lxc exec c1 -- ykman info || false

echo "==> Passing all USB devices and validating"
lxc config device add c1 usb usb
lxc exec c1 ykman info

echo "==> Removing all devices"
lxc config device remove c1 usb
! lxc exec c1 ykman info || false

echo "==> Passing the specific vendor"
lxc config device add c1 usb usb vendorid=1050
lxc exec c1 ykman info
lxc config device remove c1 usb

echo "==> Passing the specific vendor and product"
lxc config device add c1 usb usb vendorid=1050 productid=0010
lxc exec c1 ykman info
lxc config device remove c1 usb

echo "==> Passing the wrong vendor"
lxc config device add c1 usb usb vendorid=1051
! lxc exec c1 ykman info || false
lxc config device remove c1 usb

echo "==> Passing the wrong product"
lxc config device add c1 usb usb vendorid=1050 productid=0011
! lxc exec c1 ykman info || false
lxc config device remove c1 usb

echo "==> Validating working scenario with specific device after reboot"
lxc config device add c1 usb usb vendorid=1050 productid=0010
lxc exec c1 ykman info
lxc restart c1
lxc exec c1 ykman info
lxc config device remove c1 usb

FAIL=0
